/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

const SEGMENT_WIDTH = 0.25;

export const WATER_FAUNA_AREAS = {
	RIVER: {
		IS_VERTICALLY_SAMPLED: true,
		Y_START: -13.5,
		// this data is generated by running window.sampleRiverBound() in chrome
		// dev tool console when FaunaMovementBoundSamplerSystem is registered
		LAYERS: [
			{ x0: -44.12063817019236, x1: -44.015521743813714 },
			{ x0: -44.988155104703104, x1: -43.15465377732699 },
			{ x0: -45.45771674061638, x1: -42.792988989658234 },
			{ x0: -45.73111669990893, x1: -42.509111266281415 },
			{ x0: -45.95251638060958, x1: -42.225233542904604 },
			{ x0: -46.114719078882004, x1: -42.02943404205368 },
			{ x0: -46.27692177715442, x1: -41.914059712698595 },
			{ x0: -46.426541475354156, x1: -41.7986853833435 },
			{ x0: -46.48589243931662, x1: -41.688082864258284 },
			{ x0: -46.545243403279095, x1: -41.69586511966091 },
			{ x0: -46.60459436724156, x1: -41.703647375063525 },
			{ x0: -46.663945331204026, x1: -41.71142963046615 },
			{ x0: -46.72329629516649, x1: -41.77331182464899 },
			{ x0: -46.78456780803441, x1: -41.84848576870355 },
			{ x0: -46.852612763816275, x1: -41.923659712758095 },
			{ x0: -46.92065771959814, x1: -41.99883365681265 },
			{ x0: -46.988702675380004, x1: -42.074007600867205 },
			{ x0: -47.05674763116187, x1: -42.14918154492176 },
			{ x0: -47.15597271904301, x1: -42.224355488976315 },
			{ x0: -47.28280297540838, x1: -42.3222011864222 },
			{ x0: -47.409633231773746, x1: -42.426624916987 },
			{ x0: -47.53646348813911, x1: -42.5310486475518 },
			{ x0: -47.663293744504486, x1: -42.635472378116596 },
			{ x0: -47.75761610350649, x1: -42.73989610868139 },
			{ x0: -47.82427725554071, x1: -42.84431983924619 },
			{ x0: -47.89093840757492, x1: -42.94874356981099 },
			{ x0: -47.95759955960914, x1: -43.05316730037579 },
			{ x0: -48.02426071164336, x1: -43.15759103094059 },
			{ x0: -48.09092186367757, x1: -43.262014761505384 },
			{ x0: -48.157583015711786, x1: -43.36436467293663 },
			{ x0: -48.22424416774601, x1: -43.44907633116572 },
			{ x0: -48.29090531978022, x1: -43.53378798939481 },
			{ x0: -48.35756647181444, x1: -43.6184996476239 },
			{ x0: -48.42422762384865, x1: -43.70321130585299 },
			{ x0: -48.49088877588287, x1: -43.78792296408208 },
			{ x0: -48.537527041839105, x1: -43.87263462231117 },
			{ x0: -48.577934345247684, x1: -43.963651624325124 },
			{ x0: -48.61834164865626, x1: -44.072871504921835 },
			{ x0: -48.65874895206484, x1: -44.182091385518554 },
			{ x0: -48.69915625547342, x1: -44.29131126611527 },
			{ x0: -48.739563558882, x1: -44.40053114671199 },
			{ x0: -48.779970862290575, x1: -44.50975102730871 },
			{ x0: -48.820378165699154, x1: -44.61897090790543 },
			{ x0: -48.860785469107725, x1: -44.72819078850215 },
			{ x0: -48.9011927725163, x1: -44.83741066909886 },
			{ x0: -48.94160007592488, x1: -44.94663054969558 },
			{ x0: -48.974952213450365, x1: -45.055850430292296 },
			{ x0: -48.9986019157385, x1: -45.186674708617694 },
			{ x0: -49.02225161802663, x1: -45.31939760616976 },
			{ x0: -49.045901320314755, x1: -45.45212050372182 },
			{ x0: -49.06955102260289, x1: -45.584843401273886 },
			{ x0: -49.09320072489102, x1: -45.644319905532626 },
			{ x0: -49.11685042717915, x1: -45.69123472273591 },
			{ x0: -49.140500129467284, x1: -45.738149539939194 },
			{ x0: -49.16414983175542, x1: -45.78506435714248 },
			{ x0: -49.18779953404355, x1: -45.83197917434577 },
			{ x0: -49.21144923633168, x1: -45.878893991549056 },
			{ x0: -49.23333297020892, x1: -45.925808808752336 },
			{ x0: -49.248360407627615, x1: -45.972723625955624 },
			{ x0: -49.26338784504631, x1: -46.01963844315891 },
			{ x0: -49.278415282465005, x1: -46.06655326036219 },
			{ x0: -49.2934427198837, x1: -46.11346807756548 },
			{ x0: -49.308470157302395, x1: -46.160382894768766 },
			{ x0: -49.32349759472109, x1: -46.20729771197205 },
			{ x0: -49.338525032139785, x1: -46.29875504974363 },
			{ x0: -49.35355246955849, x1: -46.4189568249348 },
			{ x0: -49.36857990697718, x1: -46.53915860012597 },
			{ x0: -49.38360734439588, x1: -46.65936037531714 },
			{ x0: -49.4110027868675, x1: -46.77956215050831 },
			{ x0: -49.483008859775204, x1: -46.89976392569948 },
			{ x0: -49.55501493268291, x1: -46.9821282249109 },
			{ x0: -49.62702100559061, x1: -47.03974516380985 },
			{ x0: -49.69902707849832, x1: -47.0973621027088 },
			{ x0: -49.77103315140602, x1: -47.154979041607746 },
			{ x0: -49.84303922431373, x1: -47.21259598050669 },
			{ x0: -49.91504529722143, x1: -47.27021291940564 },
			{ x0: -49.98705137012913, x1: -47.32782985830459 },
			{ x0: -50.059057443036835, x1: -47.385446797203535 },
			{ x0: -50.13106351594454, x1: -47.41474745410159 },
			{ x0: -50.203069588852244, x1: -47.338818734986184 },
			{ x0: -50.25335223039362, x1: -47.26289001587078 },
			{ x0: -50.29801498138765, x1: -47.18696129675538 },
			{ x0: -50.34267773238169, x1: -47.111032577639975 },
			{ x0: -50.38734048337572, x1: -47.03510385852457 },
			{ x0: -50.43200323436976, x1: -46.95917513940917 },
			{ x0: -50.476665985363795, x1: -46.883246420293766 },
			{ x0: -50.52132873635782, x1: -46.80731770117836 },
			{ x0: -50.56599148735186, x1: -46.73138898206296 },
			{ x0: -50.610654238345894, x1: -46.65546026294756 },
			{ x0: -50.65531698933993, x1: -46.629202944921204 },
			{ x0: -50.699979740333966, x1: -46.63763619970941 },
			{ x0: -50.744642491328, x1: -46.64606945449762 },
			{ x0: -50.75387417402273, x1: -46.65450270928583 },
			{ x0: -50.76309733966623, x1: -46.70686902587101 },
			{ x0: -50.77232050530973, x1: -46.785152222445035 },
			{ x0: -50.78154367095323, x1: -46.86343541901907 },
			{ x0: -50.79076683659673, x1: -46.941718615593096 },
			{ x0: -50.70912594440076, x1: -47.02000181216712 },
			{ x0: -50.555224417685196, x1: -47.2776367216147 },
			{ x0: -50.40132289096963, x1: -47.56637733035047 },
			{ x0: -50.247421364254066, x1: -47.85511793908624 },
			{ x0: -49.887288319120984, x1: -48.23965517592188 },
		],
	},
	POND: {
		IS_VERTICALLY_SAMPLED: false,
		Y_START: -4.5,
		// this data is generated by running window.samplePondBound() in chrome
		// dev tool console when FaunaMovementBoundSamplerSystem is registered
		LAYERS: [
			{ x0: 22.87256247050771, x1: 25.142493092081878 },
			{ x0: 22.40218400162492, x1: 25.67932152193832 },
			{ x0: 22.094529327716458, x1: 26.039508775273703 },
			{ x0: 21.9805103197613, x1: 26.32116158507209 },
			{ x0: 21.92026707519197, x1: 26.482415331291453 },
			{ x0: 21.860023830622637, x1: 26.623303755558013 },
			{ x0: 21.794693657982794, x1: 26.739390003400377 },
			{ x0: 21.722739006189787, x1: 26.834244150570157 },
			{ x0: 21.644781161299356, x1: 26.900126364102565 },
			{ x0: 21.553817129224388, x1: 26.962307487334034 },
			{ x0: 21.462853097149424, x1: 26.99590235445969 },
			{ x0: 21.365052990624125, x1: 27.02625054060069 },
			{ x0: 21.246502623660408, x1: 27.04456770432305 },
			{ x0: 21.1156568909564, x1: 27.06288486804541 },
			{ x0: 20.97434781702685, x1: 27.077091964236384 },
			{ x0: 20.833038743097294, x1: 27.07373373605719 },
			{ x0: 20.72415439506173, x1: 27.05576513374504 },
			{ x0: 20.616362601205733, x1: 26.997171117642523 },
			{ x0: 20.49333473975795, x1: 26.933487198701208 },
			{ x0: 20.367959025247675, x1: 26.859589087974932 },
			{ x0: 20.25887739339573, x1: 26.778935893771596 },
			{ x0: 20.137439870620373, x1: 26.682011163585464 },
			{ x0: 19.98288500381553, x1: 26.57840621618214 },
			{ x0: 19.864955150611074, x1: 26.471158756132812 },
			{ x0: 19.754583563590607, x1: 26.31293714474972 },
			{ x0: 19.62263407622362, x1: 26.13292040404547 },
			{ x0: 19.512756015562662, x1: 25.93041072140549 },
			{ x0: 19.339814161050853, x1: 25.79710180590701 },
			{ x0: 19.219787648686733, x1: 25.650768913935835 },
			{ x0: 19.086006200104638, x1: 25.488812204654693 },
			{ x0: 19.00072620728752, x1: 25.29465818368454 },
			{ x0: 18.872360995073084, x1: 25.036154874878356 },
			{ x0: 18.7210671672804, x1: 24.731679746045877 },
			{ x0: 18.60695668296953, x1: 24.4969000348413 },
			{ x0: 18.48381773893084, x1: 24.35661087197442 },
			{ x0: 18.375540359562923, x1: 24.27091382212592 },
			{ x0: 18.29302702421739, x1: 24.253701488768897 },
			{ x0: 18.20612350725076, x1: 24.288119190477694 },
			{ x0: 18.10465149629937, x1: 24.34884352287929 },
			{ x0: 18.02441370950464, x1: 24.425205023473982 },
			{ x0: 17.917217124631815, x1: 24.511381693106987 },
			{ x0: 17.831974138637232, x1: 24.616658583337315 },
			{ x0: 17.76871720929025, x1: 24.70194342057358 },
			{ x0: 17.708812341268466, x1: 24.73148378903272 },
			{ x0: 17.635144340650424, x1: 24.756524321169977 },
			{ x0: 17.562715881377525, x1: 24.793675138679774 },
			{ x0: 17.49096509407648, x1: 24.849085688119857 },
			{ x0: 17.42983371848343, x1: 24.904496237559936 },
			{ x0: 17.369977238552643, x1: 24.960317898310443 },
			{ x0: 17.310535290684932, x1: 25.01633662921316 },
			{ x0: 17.254836446770152, x1: 25.072355360115882 },
			{ x0: 17.199137602855373, x1: 25.12837102847625 },
			{ x0: 17.155932023660203, x1: 25.178853020728837 },
			{ x0: 17.113967600302207, x1: 25.22933501298143 },
			{ x0: 17.08052851473744, x1: 25.280655279554367 },
			{ x0: 17.05177197373932, x1: 25.33617518151222 },
			{ x0: 17.028038422797334, x1: 25.391695083470076 },
			{ x0: 17.005671111209278, x1: 25.44721498542793 },
			{ x0: 16.991255762777882, x1: 25.502734887385785 },
			{ x0: 16.986404285403253, x1: 25.599403841386227 },
			{ x0: 16.981552808028624, x1: 25.704757094842282 },
			{ x0: 16.97921067995371, x1: 25.810110348298338 },
			{ x0: 16.985607005169967, x1: 25.915463601754396 },
			{ x0: 16.99200333038623, x1: 26.02081685521045 },
			{ x0: 17.00052036250199, x1: 26.09659839325998 },
			{ x0: 17.013565064157376, x1: 26.160189323278054 },
			{ x0: 17.02660976581276, x1: 26.224608492434843 },
			{ x0: 17.039654467468146, x1: 26.293802176395392 },
			{ x0: 17.05269916912353, x1: 26.362995860355937 },
			{ x0: 17.075026179463386, x1: 26.415970139407378 },
			{ x0: 17.103255669055944, x1: 26.46219727708183 },
			{ x0: 17.131485158648506, x1: 26.50998795973198 },
			{ x0: 17.162007721781688, x1: 26.578851311804662 },
			{ x0: 17.19343480417298, x1: 26.647714663877345 },
			{ x0: 17.224861886564273, x1: 26.702357234731537 },
			{ x0: 17.25645267048075, x1: 26.735995629355656 },
			{ x0: 17.319480174535318, x1: 26.757675205740185 },
			{ x0: 17.382507678589885, x1: 26.74046641366757 },
			{ x0: 17.445535182644452, x1: 26.684476122618285 },
			{ x0: 17.508562686699022, x1: 26.601000857246014 },
			{ x0: 17.59393010152499, x1: 26.520509777839 },
			{ x0: 17.684174946385802, x1: 26.44244507681072 },
			{ x0: 17.774419791246615, x1: 26.36999552422658 },
			{ x0: 17.88490292007506, x1: 26.315771603764887 },
			{ x0: 18.047048570123934, x1: 26.26022330296553 },
			{ x0: 18.20919422017281, x1: 26.148925839969692 },
			{ x0: 18.376849500753284, x1: 26.037628376973853 },
			{ x0: 18.589637387340563, x1: 25.948154851000336 },
			{ x0: 18.802425273927838, x1: 25.862900589051414 },
			{ x0: 19.015213160515117, x1: 25.777646327102488 },
			{ x0: 19.38843891477796, x1: 25.61042704666186 },
			{ x0: 19.868699631234367, x1: 25.411021204417185 },
			{ x0: 20.40523631840302, x1: 25.161273126150608 },
			{ x0: 20.937715594194092, x1: 24.83112320473056 },
			{ x0: 21.534921852997325, x1: 24.275970586417372 },
			{ x0: 22.56749130157374, x1: 23.07608878238602 },
		],
	},
};

const extrapolateDistanceToAreaSides = (x, y, areaData) => {
	const deltaY = (y - areaData.Y_START) / SEGMENT_WIDTH;
	// if point above top layer line or below bottom layer line
	if (deltaY < 0 || deltaY >= areaData.LAYERS.length - 1) return [null, null];
	const layerIdx0 = Math.floor(deltaY); // lower bound layer line for point
	const layerIdx1 = layerIdx0 + 1; // upper bound layer line for point
	const layerFac0 = layerIdx1 - deltaY; // extrapolation weight for lower bound layer
	const layerFac1 = deltaY - layerIdx0; // extrapolation weight for upper bound layer
	const ex0 =
		layerFac0 * areaData.LAYERS[layerIdx0].x0 +
		layerFac1 * areaData.LAYERS[layerIdx1].x0;
	const ex1 =
		layerFac0 * areaData.LAYERS[layerIdx0].x1 +
		layerFac1 * areaData.LAYERS[layerIdx1].x1;
	return [x - ex0, ex1 - x];
};

export const isPointInArea = (x, y, areaData) => {
	const [d0, d1] = extrapolateDistanceToAreaSides(x, y, areaData);
	return d0 * d1 > 0;
};

export const extrapolateDistanceToCollision = (x, y, dx, dy, areaData) => {
	const [d0, d1] = extrapolateDistanceToAreaSides(x, y, areaData);
	if (d0 * d1 <= 0) return 0;
	const xSide = Math.abs(dx > 0 ? d0 : d1);
	let tempY = dy > 0 ? Math.ceil(y) : Math.floor(y);
	while (isPointInArea(x, tempY, areaData)) {
		tempY += dy > 0 ? SEGMENT_WIDTH : -SEGMENT_WIDTH;
	}
	const ySide = Math.abs(tempY - y);
	if (xSide * ySide == 0) return 0;
	return (xSide * ySide) / Math.sqrt(Math.pow(xSide, 2) + Math.pow(ySide, 2));
};

export const generateRandomPointInArea = (areaData) => {
	const segmentIdx = Math.floor(Math.random() * (areaData.LAYERS.length - 1));
	const y = (segmentIdx + Math.random()) * SEGMENT_WIDTH + areaData.Y_START;

	const deltaY = (y - areaData.Y_START) / SEGMENT_WIDTH;

	const layerIdx0 = Math.floor(deltaY); // lower bound layer line for point
	const layerIdx1 = layerIdx0 + 1; // upper bound layer line for point
	const layerFac0 = layerIdx1 - deltaY; // extrapolation weight for lower bound layer
	const layerFac1 = deltaY - layerIdx0; // extrapolation weight for upper bound layer
	const ex0 =
		layerFac0 * areaData.LAYERS[layerIdx0].x0 +
		layerFac1 * areaData.LAYERS[layerIdx1].x0;
	const ex1 =
		layerFac0 * areaData.LAYERS[layerIdx0].x1 +
		layerFac1 * areaData.LAYERS[layerIdx1].x1;
	const xRandFactor = Math.random();
	const x = ex0 * xRandFactor + ex1 * (1 - xRandFactor);
	return [x, y];
};
